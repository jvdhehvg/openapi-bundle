on: [push, pull_request]

name: Continuous Integration

jobs:
    test:
        name: Tests (Symfony ${{ matrix.symfony-version }} & PHP ${{ matrix.php-version }})
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: ['7.3', '7.4']
                symfony-version: ['3.4', '4.4']
                phpunit-options: ['']
                coverage: [false]
                include:
                    - php-version: '7.4'
                      symfony-version: '5.1'
                      coverage: true
                      phpunit-options: '--coverage-xml coverage-xml'
                      minimum-coverage-percentage: 95

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                 php-version: ${{ matrix.php-version }}
                 extensions: mbstring, json, xml
                 coverage: pcov

            - name: Detect dependency cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                 path: ${{ steps.composer-cache.outputs.dir }}
                 key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                 restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Switch Symfony components to version ${{ matrix.symfony-version }}
              run: composer remove friendsofphp/php-cs-fixer --dev && composer require "symfony/symfony:${{ matrix.symfony-version }}.*" --no-update && composer update symfony/* --prefer-dist --no-progress --no-suggest

            - name: Run PHPUnit
              run: ./vendor/bin/phpunit ${{ matrix.phpunit-options }}

            - name: Parse PHPUnit coverage
              if: ${{ matrix.coverage == true }}
              id: coverage
              run: ./.github/bin/parse-coverage coverage-xml/index.xml ${{ matrix.minimum-coverage-percentage }}

            - name: Add coverage check run
              uses: octokit/request-action@v2.x
              if: ${{ matrix.coverage == true }}
              with:
                  route: POST /repos/:repository/check-runs
                  repository: ${{ github.repository }}
                  mediaType: |
                    previews:
                      - antiope
                  name: Code coverage
                  head_sha: ${{ github.sha }}
                  conclusion: ${{ steps.coverage.outputs.conclusion }}
                  status: completed
                  output: |
                    title: Coverage at ${{ steps.coverage.outputs.percentage }}% (required minimum coverage is ${{ matrix.minimum-coverage-percentage }}%)
                    summary: Coverage at ${{ steps.coverage.outputs.percentage }}% (required minimum coverage is ${{ matrix.minimum-coverage-percentage }}%)
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    lockfile-integrity:
        name: Composer lockfile integrity
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  coverage: none

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

    code-style:
        name: Code standards
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  coverage: none

            - name: Detect dependency cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                 path: ${{ steps.composer-cache.outputs.dir }}
                 key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                 restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Check code standards
              run: ./vendor/bin/php-cs-fixer fix --dry-run -v
